/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const ScriptsLazyImport = createFileRoute('/scripts')()
const LoginLazyImport = createFileRoute('/login')()
const CanvasLazyImport = createFileRoute('/canvas')()
const IndexLazyImport = createFileRoute('/')()
const CheckoutIndexLazyImport = createFileRoute('/checkout/')()
const CheckoutSuccessLazyImport = createFileRoute('/checkout/success')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const ScriptsLazyRoute = ScriptsLazyImport.update({
  id: '/scripts',
  path: '/scripts',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/scripts.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const CanvasLazyRoute = CanvasLazyImport.update({
  id: '/canvas',
  path: '/canvas',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/canvas.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const CheckoutIndexLazyRoute = CheckoutIndexLazyImport.update({
  id: '/checkout/',
  path: '/checkout/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/checkout/index.lazy').then((d) => d.Route),
)

const CheckoutSuccessLazyRoute = CheckoutSuccessLazyImport.update({
  id: '/checkout/success',
  path: '/checkout/success',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/checkout/success.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/canvas': {
      id: '/canvas'
      path: '/canvas'
      fullPath: '/canvas'
      preLoaderRoute: typeof CanvasLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/scripts': {
      id: '/scripts'
      path: '/scripts'
      fullPath: '/scripts'
      preLoaderRoute: typeof ScriptsLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/checkout/success': {
      id: '/checkout/success'
      path: '/checkout/success'
      fullPath: '/checkout/success'
      preLoaderRoute: typeof CheckoutSuccessLazyImport
      parentRoute: typeof rootRoute
    }
    '/checkout/': {
      id: '/checkout/'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/canvas': typeof CanvasLazyRoute
  '/login': typeof LoginLazyRoute
  '/scripts': typeof ScriptsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/checkout/success': typeof CheckoutSuccessLazyRoute
  '/checkout': typeof CheckoutIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/canvas': typeof CanvasLazyRoute
  '/login': typeof LoginLazyRoute
  '/scripts': typeof ScriptsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/checkout/success': typeof CheckoutSuccessLazyRoute
  '/checkout': typeof CheckoutIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/canvas': typeof CanvasLazyRoute
  '/login': typeof LoginLazyRoute
  '/scripts': typeof ScriptsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/checkout/success': typeof CheckoutSuccessLazyRoute
  '/checkout/': typeof CheckoutIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/canvas'
    | '/login'
    | '/scripts'
    | '/settings'
    | '/checkout/success'
    | '/checkout'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/canvas'
    | '/login'
    | '/scripts'
    | '/settings'
    | '/checkout/success'
    | '/checkout'
  id:
    | '__root__'
    | '/'
    | '/canvas'
    | '/login'
    | '/scripts'
    | '/settings'
    | '/checkout/success'
    | '/checkout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CanvasLazyRoute: typeof CanvasLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  ScriptsLazyRoute: typeof ScriptsLazyRoute
  SettingsLazyRoute: typeof SettingsLazyRoute
  CheckoutSuccessLazyRoute: typeof CheckoutSuccessLazyRoute
  CheckoutIndexLazyRoute: typeof CheckoutIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CanvasLazyRoute: CanvasLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  ScriptsLazyRoute: ScriptsLazyRoute,
  SettingsLazyRoute: SettingsLazyRoute,
  CheckoutSuccessLazyRoute: CheckoutSuccessLazyRoute,
  CheckoutIndexLazyRoute: CheckoutIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/canvas",
        "/login",
        "/scripts",
        "/settings",
        "/checkout/success",
        "/checkout/"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/canvas": {
      "filePath": "canvas.lazy.jsx"
    },
    "/login": {
      "filePath": "login.lazy.jsx"
    },
    "/scripts": {
      "filePath": "scripts.lazy.jsx"
    },
    "/settings": {
      "filePath": "settings.lazy.jsx"
    },
    "/checkout/success": {
      "filePath": "checkout/success.lazy.tsx"
    },
    "/checkout/": {
      "filePath": "checkout/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
