/* Memory Network Styles - Award-Winning Neural Interface */

/* Neuron-inspired network styling */
.vis-network .vis-node {
  border: 2px solid rgba(255, 255, 255, 0.8);
  box-shadow:
    0 0 15px rgba(255, 255, 255, 0.3),
    inset 0 0 10px rgba(255, 255, 255, 0.1);
  filter: drop-shadow(0 0 8px rgba(114, 137, 218, 0.4));
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.vis-network .vis-node:hover {
  box-shadow:
    0 0 25px rgba(255, 255, 255, 0.5),
    inset 0 0 15px rgba(255, 255, 255, 0.2);
  filter: drop-shadow(0 0 12px rgba(114, 137, 218, 0.6));
  transform: scale(1.05);
}

/* Enhanced edge styling with dynamic thickness */
.vis-network .vis-edge {
  stroke-width: 2px;
  filter: drop-shadow(0 0 3px rgba(160, 160, 160, 0.3));
  transition: all 0.3s ease;
}

.vis-network .vis-edge.strong-connection {
  stroke-width: 4px;
  filter: drop-shadow(0 0 6px rgba(114, 137, 218, 0.5));
}

.vis-network .vis-edge.weak-connection {
  stroke-width: 1px;
  opacity: 0.6;
}

/* Subject nodes special styling */
.vis-network .vis-node.subject-node {
  border: 2px solid rgba(46, 204, 113, 0.8);
  box-shadow:
    0 0 12px rgba(46, 204, 113, 0.4),
    inset 0 0 8px rgba(46, 204, 113, 0.1);
  filter: drop-shadow(0 0 6px rgba(46, 204, 113, 0.3));
}

.vis-network .vis-node.subject-node.key-subject {
  border: 2px solid rgba(255, 215, 0, 0.9);
  box-shadow:
    0 0 15px rgba(255, 215, 0, 0.5),
    inset 0 0 10px rgba(255, 215, 0, 0.2);
  filter: drop-shadow(0 0 8px rgba(255, 215, 0, 0.4));
}

/* Floating memory preview - now works as a modal */
.memory-preview-card {
  position: absolute;
  background: rgba(0, 0, 0, 0.95);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 16px;
  padding: 16px;
  max-width: 320px;
  min-width: 280px;
  z-index: 30;
  box-shadow:
    0 20px 40px rgba(0, 0, 0, 0.4),
    0 0 20px rgba(114, 137, 218, 0.2);
  transform: translateY(-10px);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  pointer-events: auto;
}

.memory-preview-card.fixed {
  pointer-events: auto;
}

.memory-preview-card::before {
  content: "";
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  background: linear-gradient(
    135deg,
    rgba(114, 137, 218, 0.3) 0%,
    rgba(46, 204, 113, 0.3) 50%,
    rgba(241, 196, 15, 0.3) 100%
  );
  border-radius: 16px;
  z-index: -1;
}

.memory-preview-header {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 12px;
  padding-bottom: 8px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.memory-preview-icon {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: linear-gradient(45deg, #7289da, #2ecc71);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 10px;
  color: white;
}

.memory-preview-title {
  font-size: 14px;
  font-weight: 600;
  color: #e8e8e8;
  flex: 1;
}

.memory-preview-content {
  color: rgba(255, 255, 255, 0.8);
  font-size: 13px;
  line-height: 1.4;
  max-height: 120px;
  overflow-y: auto;
  margin-bottom: 12px;
}

.memory-preview-subjects {
  display: flex;
  flex-wrap: wrap;
  gap: 6px;
}

.memory-preview-subject {
  background: rgba(46, 204, 113, 0.2);
  border: 1px solid rgba(46, 204, 113, 0.4);
  color: #2ecc71;
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 11px;
  font-weight: 500;
}

.memory-preview-subject.key-subject {
  background: rgba(255, 215, 0, 0.2);
  border: 1px solid rgba(255, 215, 0, 0.4);
  color: #ffd700;
}

/* Network controls */
.memory-network-controls {
  position: absolute;
  top: 16px;
  left: 16px;
  z-index: 20;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.memory-network-control-button {
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 10px;
  padding: 10px;
  color: white;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 44px;
  height: 44px;
}

.memory-network-control-button:hover {
  background: rgba(114, 137, 218, 0.3);
  border-color: rgba(114, 137, 218, 0.5);
  transform: scale(1.05);
}

.memory-network-control-button.active {
  background: rgba(114, 137, 218, 0.5);
  border-color: rgba(114, 137, 218, 0.8);
}

/* Path tracing visualization */
.vis-network .vis-edge.path-trace {
  stroke-width: 5px;
  color: rgba(255, 193, 7, 0.9);
  filter: drop-shadow(0 0 8px rgba(255, 193, 7, 0.6));
  animation: pathFlow 2s ease-in-out infinite;
}

@keyframes pathFlow {
  0%,
  100% {
    opacity: 0.9;
  }
  50% {
    opacity: 0.6;
  }
}

/* Memory type indicators */
.memory-type-indicator {
  position: absolute;
  top: -8px;
  right: -8px;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background: linear-gradient(45deg, #7289da, #2ecc71);
  border: 2px solid rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 8px;
  color: white;
  z-index: 10;
}

/* Network statistics overlay */
.memory-network-stats {
  position: absolute;
  bottom: 16px;
  left: 16px;
  z-index: 20;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  padding: 12px 16px;
  color: white;
  font-size: 12px;
  min-width: 200px;
}

.memory-network-stats-title {
  font-weight: 600;
  margin-bottom: 8px;
  color: #7289da;
}

.memory-network-stats-item {
  display: flex;
  justify-content: space-between;
  margin-bottom: 4px;
}

.memory-network-stats-value {
  color: #2ecc71;
  font-weight: 500;
}

/* Mobile optimizations */
@media (max-width: 768px) {
  .memory-network-controls {
    top: 8px;
    left: 8px;
    flex-direction: row;
    gap: 6px;
  }

  .memory-network-control-button {
    width: 38px;
    height: 38px;
    padding: 8px;
  }

  .memory-preview-card {
    max-width: 280px;
    min-width: 240px;
    padding: 12px;
  }

  .memory-network-stats {
    bottom: 8px;
    left: 8px;
    padding: 8px 12px;
    min-width: 150px;
    font-size: 11px;
  }

  .vis-network .vis-node {
    box-shadow:
      0 0 10px rgba(255, 255, 255, 0.3),
      inset 0 0 5px rgba(255, 255, 255, 0.1);
  }
}

/* Accessibility and performance */
@media (prefers-reduced-motion: reduce) {
  .vis-network .vis-node,
  .vis-network .vis-edge,
  .memory-preview-card,
  .memory-network-control-button {
    transition: none;
    animation: none;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .vis-network .vis-node {
    border-width: 3px;
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.8);
  }

  .memory-preview-card {
    border: 2px solid rgba(255, 255, 255, 0.5);
    background: rgba(0, 0, 0, 0.98);
  }
}

/* Loading states */
.memory-network-loading {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(5px);
  z-index: 40;
}

.memory-network-loading-spinner {
  width: 40px;
  height: 40px;
  border: 3px solid rgba(114, 137, 218, 0.2);
  border-top: 3px solid #7289da;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 16px;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.memory-network-loading-text {
  color: rgba(255, 255, 255, 0.8);
  font-size: 14px;
  font-weight: 500;
}

/* Original TableView styles preserved */
.memory-node {
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  margin-bottom: 12px;
  background-color: rgba(20, 20, 20, 0.6);
  overflow: hidden;
  transition:
    transform 0.2s ease,
    border-color 0.2s ease,
    box-shadow 0.2s ease;
}

.memory-node:hover {
  border-color: rgba(255, 255, 255, 0.3);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.memory-node-expanded {
  border-left: 3px solid rgba(114, 137, 218, 0.7);
  background-color: rgba(30, 30, 30, 0.7);
  max-height: unset;
  transition: all 0.3s ease;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.memory-node-header {
  display: flex;
  align-items: center;
  padding: 10px 16px;
  cursor: pointer;
  background-color: rgba(40, 40, 40, 0.6);
  transition: background-color 0.2s ease;
}

.memory-node-header:hover {
  background-color: rgba(60, 60, 60, 0.8);
}

.memory-node-info {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.memory-node-connector {
  width: 20px;
  height: 20px;
  border-left: 2px solid rgba(255, 255, 255, 0.3);
  border-bottom: 2px solid rgba(255, 255, 255, 0.3);
  margin-right: 10px;
}

.memory-node-time {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.7);
  display: flex;
  align-items: center;
  gap: 8px;
}

.memory-node-expand-icon {
  font-size: 12px;
  color: rgba(255, 255, 255, 0.6);
  transition: all 0.2s ease;
  width: 18px;
  height: 18px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 2px;
  margin-right: 4px;
}

.memory-node-expand-icon.has-children {
  background-color: rgba(114, 137, 218, 0.2);
  color: rgba(255, 255, 255, 0.8);
  border: 1px solid rgba(114, 137, 218, 0.4);
}

.memory-node-expanded .memory-node-expand-icon {
  transform: rotate(0deg);
}

.memory-node:not(.memory-node-expanded) .memory-node-expand-icon.has-children {
  transform: rotate(-90deg);
}

.memory-children-count {
  font-size: 12px;
  color: rgba(255, 255, 255, 0.5);
  margin-left: 4px;
}

.memory-node-actions {
  display: flex;
  gap: 8px;
}

.memory-node-content {
  padding: 12px 16px;
  max-height: 200px;
  overflow: hidden;
  position: relative;
  transition: all 0.3s ease;
  overflow-x: hidden;
  width: 100%;
}

.memory-node-content.expanded {
  max-height: none;
  animation: expandContent 0.3s ease;
}

.memory-node-content.collapsed {
  max-height: 200px;
  opacity: 0.9;
  animation: collapseContent 0.3s ease;
}

@keyframes expandContent {
  from {
    max-height: 200px;
    opacity: 0.9;
  }
  to {
    max-height: 2000px;
    opacity: 1;
  }
}

@keyframes collapseContent {
  from {
    max-height: 2000px;
    opacity: 1;
  }
  to {
    max-height: 200px;
    opacity: 0.9;
  }
}

.memory-children-container {
  padding-left: 20px;
  margin-top: 8px;
  margin-bottom: 12px;
  border-left: 2px dashed rgba(114, 137, 218, 0.3);
  animation: fadeIn 0.3s ease;
  width: calc(100% - 20px);
  overflow-wrap: break-word;
  word-wrap: break-word;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.memory-node-messages {
  display: flex;
  flex-direction: column;
  gap: 12px;
  width: 100%;
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  overflow-x: hidden;
}

.memory-empty-state {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;
  color: rgba(255, 255, 255, 0.5);
  font-style: italic;
  text-align: center;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 8px;
  margin: 20px;
}

.memory-node-fade {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 50px;
  background: linear-gradient(
    to bottom,
    rgba(20, 20, 20, 0),
    rgba(20, 20, 20, 1)
  );
}

.memory-table {
  padding: 20px;
  display: flex;
  flex-direction: column;
  gap: 16px;
  overflow-y: auto;
  box-sizing: border-box;
  flex: 1;
  overflow-x: hidden;
  width: 100%;
  max-width: 100%;
}

.memory-view-button,
.memory-delete-button {
  background-color: rgba(30, 80, 200, 0.3);
  color: white;
  border: none;
  border-radius: 4px;
  padding: 4px 8px;
  font-size: 12px;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
}

.memory-delete-button {
  background-color: rgba(200, 30, 30, 0.3);
}

.memory-view-button:hover {
  background-color: rgba(30, 80, 220, 0.5);
  transform: translateY(-2px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.memory-delete-button:hover {
  background-color: rgba(220, 30, 30, 0.5);
  transform: translateY(-2px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* Ensure proper network visibility on all devices */
.memory-network-container {
  width: 100%;
  height: 100%;
  min-height: 300px;
  position: relative;
}

#memory-network-container {
  width: 100%;
  height: 100%;
  min-height: 500px;
}
