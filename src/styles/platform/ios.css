/* iOS-specific styles for Ditto app */

/* Base iOS support */
@supports (-webkit-touch-callout: none) {
  html,
  body {
    height: -webkit-fill-available;
  }

  #root {
    min-height: -webkit-fill-available;
    height: -webkit-fill-available;
  }

  /* App container */
  .app {
    /* Use the full height of the viewport on iOS */
    height: -webkit-fill-available;
    /* Direct application of safe area insets */
    padding-top: env(safe-area-inset-top, 0px);
    padding-bottom: env(safe-area-inset-bottom, 0px);
    padding-left: env(safe-area-inset-left, 0px);
    padding-right: env(safe-area-inset-right, 0px);
  }

  /* Header adjustments for notch */
  .app-header {
    padding-top: env(safe-area-inset-top, 0px);
  }

  /* Footer adjustments for home indicator and iOS Safari bottom bar */
  .app-footer {
    padding-bottom: env(safe-area-inset-bottom, 0px);
    position: fixed; /* Keep fixed positioning for iOS Safari */
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 300;
  }

  /* Input field adjustments */
  .form {
    margin-bottom: env(safe-area-inset-bottom, 0px);
  }

  /* Content wrapper adjustments for iOS */
  .app-content-wrapper {
    flex: 1;
    display: flex;
    flex-direction: column;
    /* No padding - footer is fixed */
  }

  /* Make sure body fills available space */
  .app-body {
    flex: 1;
    overflow-y: auto;
    /* Remove padding-bottom - now handled by chat-feed-container */
  }

  /* Use dynamic footer height to ensure proper spacing */
  .chat-feed-container {
    padding-bottom: calc(
      var(--footer-height, 75px) + env(safe-area-inset-bottom, 0px) + 30px
    ); /* Add extra space to prevent cutoff */
  }

  /* Follow button is now entirely positioned via JS */

  /* Additional padding for iOS safe area - now applied via JS */
  @supports (-webkit-touch-callout: none) {
    /* Account for safe area in PWA mode and Safari */
    @media all and (display-mode: standalone) {
      /* Override bottom position for PWA mode with safe area */
      .form {
        padding-bottom: calc(
          var(--spacing-sm) + env(safe-area-inset-bottom, 0px)
        );
      }
    }
  }

  /* Additional safe area consideration for iOS Safari */
  @media not all and (display-mode: standalone) {
    .form {
      padding-bottom: calc(
        var(--spacing-sm) + env(safe-area-inset-bottom, 0px)
      );
    }
  }

  /* Ensure bottom spacer provides enough room but not excessive */
  .bottom-spacer {
    display: block !important;
    position: relative;
    width: 100%;
  }

  /* Fix for iOS Safari in standalone PWA mode */
  @media all and (display-mode: standalone) {
    body {
      /* Disable bouncing/scrolling in PWA mode */
      position: fixed;
      width: 100%;
      height: 100%;
      overflow: hidden;
    }

    /* PWA-specific app container adjustments */
    .app {
      /* Remove any extra spacing in PWA mode */
      padding-bottom: 0;
      /* Ensure content uses the full height */
      height: 100%;
    }

    /* Direct application of safe areas to header in PWA mode */
    .app-header {
      padding-top: env(safe-area-inset-top, 0px);
    }

    /* Footer adjustments for PWA mode */
    .app-footer {
      position: fixed !important;
      bottom: 0 !important;
      left: 0 !important;
      right: 0 !important;
      z-index: 1000 !important;
      padding-bottom: env(safe-area-inset-bottom, 0px) !important;
    }

    /* Bottom area spacing for PWA mode */
    .form {
      padding-bottom: 0;
      margin-bottom: 0;
    }

    /* Fix for modal buttons in PWA mode */
    .modal-close-button,
    .modal-maximize-button {
      top: calc(env(safe-area-inset-top, 0px) + 10px);
    }
  }

  /* Disable pinch zoom */
  body {
    touch-action: pan-y;
  }

  /* Prevent text field zoom on focus in iOS */
  input,
  textarea {
    font-size: 16px;
  }
}

/* CSS Variables for iOS safe areas - use these in component styles */
:root {
  --safe-area-top: env(safe-area-inset-top, 0px);
  --safe-area-bottom: env(safe-area-inset-bottom, 0px);
  --safe-area-left: env(safe-area-inset-left, 0px);
  --safe-area-right: env(safe-area-inset-right, 0px);
}
